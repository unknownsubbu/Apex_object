trigger EndRide on Booking__c (after insert) {
    if(trigger.isAfter && trigger.isInsert){
      //double sum=0;
       String Code;
        set<id> objBookIdSet = new set<id>();
        for(Booking__c  objBookId:trigger.new)
        {
          objBookIdSet.add(objBookId.Customer__c);
        }
        
        //for(Booking__c objBookValues : Trigger.new)
        
        List<Contact> objKm= new List<Contact>();
        
            for(Contact objCustValues:[Select id, Name,total_Customer_KMs__c,Earned_Points__c,Email,(Select id,Distance_KM_s__c from Bookings__r) From Contact where id in : objBookIdSet])
            {
                objCustValues.total_Customer_KMs__c=0;
                for(Booking__c ObjBooKValue: objCustValues.Bookings__r)
                {
                  // sum=ObjBooKValue.Distance_KM_s__c;
                   // objCustValues.total_Customer_KMs__c=sum;
                    //System.debug(sum);
                   // Integer totalOrder=objCustValues.Bookings__r.size();
                    //sum=ObjBooKValue.Distance_KM_s__c;
                    //objCustValues.total_Customer_KMs__c+=sum;
                    if(ObjBooKValue.Distance_KM_s__c!=null)
                    { 
                        objCustValues.total_Customer_KMs__c= objCustValues.total_Customer_KMs__c+ObjBooKValue.Distance_KM_s__c;
                    }
                }
         if(objCustValues.total_Customer_KMs__c>10 )
        {
           Double EarnPoint=((objCustValues.total_Customer_KMs__c-10)*1.2)+(objCustValues.total_Customer_KMs__c*0.6);
            objCustValues.Earned_Points__c=EarnPoint;
        }
        else if(objCustValues.total_Customer_KMs__c<=10)
        {
            Double EarnPoint=(objCustValues.total_Customer_KMs__c*0.6);
            objCustValues.Earned_Points__c=EarnPoint;
        }
                objKm.add(objCustValues);
                
                //email feild
      if(objCustValues.Earned_Points__c>30)
        {
             Code='VOGOSUPERRIDE30';
        }
         if(objCustValues.Earned_Points__c>60)
        {
             Code='VOGOSUPERRIDE60';
        }
         if(objCustValues.Earned_Points__c>90)
        {
             Code='VOGOSUPERRIDE90';
        }
        Messaging.SingleEmailMessage message = new Messaging.SingleEmailMessage();
		message.toAddresses = new String[] {objCustValues.Email};
		message.optOutPolicy = 'FILTER';
		message.subject = 'Wooh! The ride has been Completed';
		message.plainTextBody = ' Hi '+objCustValues.Name+ '\n'+ 'Thank you for using vogo ride,'+'\n'+' Earned Points: '+objCustValues.Earned_Points__c + '\n'+' Use the code '+Code+'  For your next ride.'+'\n'+' Thank you,'+'\n'+'VOGO';
		Messaging.SingleEmailMessage[] messages =  new List<Messaging.SingleEmailMessage> {message};
        Messaging.SendEmailResult[] results = Messaging.sendEmail(messages);
       
      if (results[0].success) {
         System.debug('The email was sent successfully.');
			}
    else {
    System.debug('The email failed to send: '+ results[0].errors[0].message);
           }
         }//1st for loop ends
        system.debug(objKm);
        update objKm;
    }
}
